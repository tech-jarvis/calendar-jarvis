# Description: The name of the check that will be created.
# Valid Options: A reasonably sized string.
# Default: 'Rubocop Action'
check_name: "Rubocop"

# Description: Extensions required to run your rubocop config.
# Valid options: Any rubocop extension, by default the latest gem version will be used. You can explicitly state that
# (not required) or use a version number like '1.5.1'.
# Default: nil
versions:
  - 'rubocop'
  - 'rubocop-performance'
  - 'rubocop-rails'
  - 'rubocop-rspec'

# Description: Rubocop configuration file path relative to the workspace.
# Valid options: A valid file path inside of the workspace.
# Default: nil
# Note: This does not need to be filled out for Rubocop to still find your config.
# Resource: https://rubocop.readthedocs.io/en/stable/configuration/
# rubocop_config_path: '.rubocop.yml'

# Run all cops enabled by configuration except this list.
# Valid options: list of valid cop(s) and/or departments.
# Default: nil
# Resource: https://rubocop.readthedocs.io/en/stable/cops/
# rubocop_excluded_cops:
#   - 'Style/FrozenStringLiteralComment'

# Minimum severity for exit with error code
# Valid options: 'refactor', 'convention', 'warning', 'error', or 'fatal'.
# Default: 'warning'
# Resource: https://rubocop.readthedocs.io/en/stable/configuration/#severity
rubocop_fail_level: 'warning'

# Instead of installing gems from rubygems, we can run `bundle install` on your project,
# you would need to do this if you are using something like 'rubocop-github' or if you don't
# want to list out extensions with the `rubocop_extensions` key.
# Valid options: true || false
# Default: false
bundle: false

# The scope of code that Rubocop should lint. Use this if you only want to lint changed files. If this is not set
# or not equal to 'modified', Rubocop is run against the entire codebase.
# Valid options: 'modified'
# Default: nil
# check_scope: 'modified'
